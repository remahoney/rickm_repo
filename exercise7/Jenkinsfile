pipeline {
  agent any
  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }
    stage('Tests') {
      when {
        not {
          branch 'main'
        }
      }
      steps {
        parallel {
          stage('Unit Tests') {
            steps {
              echo 'Running unit tests...'
              // Insert your unit test commands here
              }
            }
          stage('Integration Tests') {
            steps {
              echo 'Running integration tests...'
              // Insert your integration test commands here
              }
            }
          stage('Static Analysis') {
            steps {
              echo 'Running static analysis...'
              // Insert your static analysis commands here
              }
            }
          }
        }
      }
    }
    stage('Code Coverage') {
      when {
        branch 'main'
      }
      steps {
        echo 'Running code coverage tests...'
        // Insert your code coverage test commands here
      }
    }
  }
  post {
    always {
      jacoco(execPattern: '**/jacoco.exec')
        script {
          def testsFailed = currentBuild.result == 'FAILURE'
            if (testsFailed) {
              echo 'tests fail!'
            } else {
                echo 'tests pass!'
            }
          }
        }
      }
    }
  }
}
